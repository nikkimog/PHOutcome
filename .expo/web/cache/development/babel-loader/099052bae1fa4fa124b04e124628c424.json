{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicolemogensen/PHOutcomes/src/screens/HomeScreen/HomeScreen.js\";\nimport React, { useEffect, useState, createContext } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport BladderHome from \"../BladderOutcomeMeasures/BladderHome\";\nimport QuestionTwo from \"../BladderOutcomeMeasures/UDI/bladderquestions/QuestionTwo\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Button } from \"react-native-paper\";\nimport { userContext, Provider } from \"../LoginScreen/LoginScreen\";\nvar Drawer = createDrawerNavigator();\nvar Stack = createStackNavigator();\n\nfunction HomeScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var handlePress = function handlePress() {\n    return React.createElement(Bladder, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 28\n      }\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.baseText,\n    onPress: handlePress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }, \"Welcome to Pelvic Health Outcomes \", \"\\n\"), React.createElement(View, {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \" \", \"Swipe right or \", \"\\n\", \"\\n\", React.createElement(Button, {\n    mode: \"contained\",\n    title: \"click here\",\n    color: \"indianred\",\n    onPress: function onPress() {\n      return navigation.openDrawer();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }, \"Click Here\"), \"\\n\", \" \", \"\\n\", \"to view the categories.\")), React.createElement(Button, {\n    color: \"orange\",\n    title: \"click me\",\n    onPress: function onPress() {\n      return alert(\"button tapped\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default function Apps(props) {\n  var _this2 = this;\n\n  console.log(\"props.extraData\", props.extraData);\n  var userId = props.extraData.fullName;\n  var x = 1;\n\n  var _useState = useState(props.extraData),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  console.log(\"user\", {\n    user: user\n  });\n  return React.createElement(Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 3\n    }\n  }, React.createElement(NavigationContainer, {\n    independent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 4\n    }\n  }, React.createElement(Drawer.Navigator, {\n    initialRouteName: \"NewHome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"NewHome\",\n    component: HomeScreen,\n    setParams: {\n      userId: props.extraData.id\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 6\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"bladder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 6\n    }\n  }, function (props) {\n    return React.createElement(BladderHome, _extends({}, props, {\n      userId: userId,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }));\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 40\n  },\n  baseText: {\n    fontFamily: \"Cochin\",\n    fontSize: 30,\n    textAlign: \"center\"\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/nicolemogensen/PHOutcomes/src/screens/HomeScreen/HomeScreen.js"],"names":["React","useEffect","useState","createContext","NavigationContainer","createDrawerNavigator","BladderHome","QuestionTwo","createStackNavigator","Button","userContext","Provider","Drawer","Stack","HomeScreen","navigation","handlePress","styles","container","baseText","textAlign","openDrawer","alert","Apps","props","console","log","extraData","userId","fullName","x","user","setUser","id","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","fontFamily","button","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, createContext } from \"react\";\nimport {\n\tFlatList,\n\tKeyboard,\n\tText,\n\tTextInput,\n\tTouchableOpacity,\n\tView,\n\tSafeAreaView,\n\tStatusBar,\n\tStyleSheet,\n\tImage,\n} from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n// import styles from \"./styles\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\n// import { firebase } from \"../../firebase/config\";\nimport BladderHome from \"../BladderOutcomeMeasures/BladderHome\";\nimport QuestionTwo from \"../BladderOutcomeMeasures/UDI/bladderquestions/QuestionTwo\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Button } from \"react-native-paper\";\nimport { userContext, Provider } from \"../LoginScreen/LoginScreen\";\n\nconst Drawer = createDrawerNavigator();\n\nconst Stack = createStackNavigator();\nfunction HomeScreen({ navigation }) {\n\t// console.log(\"props in homescreen\", props);\n\t// console.log(user);\n\t// console.log(\"route in homescreen\", route);\n\t// let fullName = props.extraData[\"fullName\"];\n\t// console.log(\"route.params\", route.params);\n\t// console.log(\"userContext in homescren\", userContext);\n\tconst handlePress = () => <Bladder />;\n\t// <userContext.Consumer>{console.log(\"user\", context)}</userContext.Consumer>;\n\treturn (\n\t\t<SafeAreaView style={styles.container}>\n\t\t\t{/* <userContext.Consumer>\n\t\t\t\t{(context) => <Text>{context}</Text>}\n\t\t\t</userContext.Consumer> */}\n\t\t\t<Text style={styles.baseText} onPress={handlePress}>\n\t\t\t\tWelcome to Pelvic Health Outcomes {\"\\n\"}\n\t\t\t</Text>\n\t\t\t<View style={{ textAlign: \"center\" }}>\n\t\t\t\t<Text>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\tSwipe right or {\"\\n\"}\n\t\t\t\t\t{\"\\n\"}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tmode=\"contained\"\n\t\t\t\t\t\ttitle=\"click here\"\n\t\t\t\t\t\tcolor=\"indianred\"\n\t\t\t\t\t\tonPress={() => navigation.openDrawer()}\n\t\t\t\t\t>\n\t\t\t\t\t\tClick Here\n\t\t\t\t\t</Button>\n\t\t\t\t\t{\"\\n\"} {\"\\n\"}to view the categories.\n\t\t\t\t</Text>\n\t\t\t</View>\n\t\t\t{/* <Image\n\t\t\t\t// resizeMode=\"repeat\"\n\t\t\t\tstyle={{ height: 100, width: 100 }}\n\t\t\t\tsource={require(\"../image7.png\")} */}\n\t\t\t{/* /> */}\n\t\t\t<Button\n\t\t\t\tcolor=\"orange\"\n\t\t\t\ttitle=\"click me\"\n\t\t\t\tonPress={() => alert(\"button tapped\")}\n\t\t\t/>\n\t\t\t<StatusBar style=\"auto\" />\n\t\t</SafeAreaView>\n\t);\n\t// }\n\t// const [entityText, setEntityText] = useState(\"\");\n\t// const [entities, setEntities] = useState([]);\n\n\t// const entityRef = firebase.firestore().collection(\"entities\");\n\t// const userID = props.extraData.id;\n\n\t// useEffect(() => {\n\t// \tentityRef\n\t// \t\t.where(\"authorID\", \"==\", userID)\n\t// \t\t.orderBy(\"createdAt\", \"desc\")\n\t// \t\t.onSnapshot(\n\t// \t\t\t(querySnapshot) => {\n\t// \t\t\t\tconst newEntities = [];\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\n\t// \t\t\t\t\tconst entity = doc.data();\n\t// \t\t\t\t\tentity.id = doc.id;\n\t// \t\t\t\t\tnewEntities.push(entity);\n\t// \t\t\t\t});\n\t// \t\t\t\tsetEntities(newEntities);\n\t// \t\t\t},\n\t// \t\t\t(error) => {\n\t// \t\t\t\tconsole.log(error);\n\t// \t\t\t}\n\t// \t\t);\n\t// }, []);\n\n\t// const onAddButtonPress = () => {\n\t// \tif (entityText && entityText.length > 0) {\n\t// \t\tconst timestamp = firebase.firestore.FieldValue.serverTimestamp();\n\t// \t\tconst data = {\n\t// \t\t\ttext: entityText,\n\t// \t\t\tauthorID: userID,\n\t// \t\t\tcreatedAt: timestamp,\n\t// \t\t};\n\t// \t\tentityRef\n\t// \t\t\t.add(data)\n\t// \t\t\t.then((_doc) => {\n\t// \t\t\t\tsetEntityText(\"\");\n\t// \t\t\t\tKeyboard.dismiss();\n\t// \t\t\t})\n\t// \t\t\t.catch((error) => {\n\t// \t\t\t\talert(error);\n\t// \t\t\t});\n\t// \t}\n\t// };\n\n\t// const renderEntity = ({ item, index }) => {\n\t// \treturn (\n\t// \t\t<View style={styles.entityContainer}>\n\t// \t\t\t<Text style={styles.entityText}>\n\t// \t\t\t\t{index}. {item.text}\n\t// \t\t\t</Text>\n\t// \t\t</View>\n\t// \t);\n\t// };\n\n\t// return (\n\t// \t<View style={styles.container}>\n\t// \t\t<View style={styles.formContainer}>\n\t// \t\t\t<TextInput\n\t// \t\t\t\tstyle={styles.input}\n\t// \t\t\t\tplaceholder=\"Add new entity\"\n\t// \t\t\t\tplaceholderTextColor=\"#aaaaaa\"\n\t// \t\t\t\tonChangeText={(text) => setEntityText(text)}\n\t// \t\t\t\tvalue={entityText}\n\t// \t\t\t\tunderlineColorAndroid=\"transparent\"\n\t// \t\t\t\tautoCapitalize=\"none\"\n\t// \t\t\t/>\n\t// \t\t\t<TouchableOpacity style={styles.button} onPress={onAddButtonPress}>\n\t// \t\t\t\t<Text style={styles.buttonText}>Add</Text>\n\t// \t\t\t</TouchableOpacity>\n\t// \t\t</View>\n\t// \t\t{entities && (\n\t// \t\t\t<View style={styles.listContainer}>\n\t// \t\t\t\t<FlatList\n\t// \t\t\t\t\tdata={entities}\n\t// \t\t\t\t\trenderItem={renderEntity}\n\t// \t\t\t\t\tkeyExtractor={(item) => item.id}\n\t// \t\t\t\t\tremoveClippedSubviews={true}\n\t// \t\t\t\t/>\n\t// \t\t\t</View>\n\t// \t\t)}\n\t// \t</View>\n\t// );\n}\n\nexport default function Apps(props) {\n\t// console.log(\"route.params\", route.params);\n\t// console.log(\"props\", props);\n\tconsole.log(\"props.extraData\", props.extraData);\n\tlet userId = props.extraData.fullName;\n\n\tlet x = 1;\n\tconst [user, setUser] = useState(props.extraData);\n\tconsole.log(\"user\", { user });\n\n\treturn (\n\t\t<Provider>\n\t\t\t<NavigationContainer independent={true}>\n\t\t\t\t<Drawer.Navigator initialRouteName=\"NewHome\">\n\t\t\t\t\t<Drawer.Screen\n\t\t\t\t\t\tname=\"NewHome\"\n\t\t\t\t\t\tcomponent={HomeScreen}\n\t\t\t\t\t\tsetParams={{ userId: props.extraData.id }}\n\t\t\t\t\t/>\n\t\t\t\t\t<Drawer.Screen name=\"bladder\">\n\t\t\t\t\t\t{(props) => <BladderHome {...props} userId={userId} />}\n\t\t\t\t\t</Drawer.Screen>\n\t\t\t\t\t{/* component={BladderHome}\n\t\t\t\t\tinitialParams={{ userId: props.extraData.id }} */}\n\n\t\t\t\t\t{/* /> */}\n\t\t\t\t\t{/* <Drawer.Screen name=\"q2\" component={QuestionTwo} /> */}\n\t\t\t\t</Drawer.Navigator>\n\t\t\t</NavigationContainer>\n\t\t</Provider>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#fff\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tfontSize: 40,\n\t},\n\tbaseText: {\n\t\tfontFamily: \"Cochin\",\n\t\tfontSize: 30,\n\t\ttextAlign: \"center\",\n\t},\n\tbutton: {\n\t\talignItems: \"center\",\n\t\tbackgroundColor: \"#DDDDDD\",\n\t\tpadding: 10,\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}