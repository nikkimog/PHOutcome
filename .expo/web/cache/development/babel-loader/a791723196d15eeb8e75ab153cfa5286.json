{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/nicolemogensen/PHOutcomes/node_modules/react-native-x2-carousel/src/Carousel.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nvar NUM_OF_DUP = 3;\n\nvar approximatelyEqualTo = function approximatelyEqualTo(a, b) {\n  var epsilon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.01;\n  return Math.abs(a - b) < epsilon;\n};\n\nvar Carousel = function (_Component) {\n  _inherits(Carousel, _Component);\n\n  var _super = _createSuper(Carousel);\n\n  function Carousel() {\n    var _this;\n\n    _classCallCheck(this, Carousel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.scrollView = React.createRef();\n    _this.state = {\n      currentPage: 1,\n      childWidth: 0\n    };\n\n    _this.isLooped = function () {\n      var _this$props = _this.props,\n          data = _this$props.data,\n          loop = _this$props.loop;\n      return loop && data.length > 1;\n    };\n\n    _this.setAutoPlay = function (start) {\n      if (start) {\n        _this.setAutoPlay(false);\n\n        var _this$props2 = _this.props,\n            data = _this$props2.data,\n            autoplayInterval = _this$props2.autoplayInterval;\n        _this.autoplayTimeout = setTimeout(function () {\n          var isLooped = _this.isLooped();\n\n          var _this$state = _this.state,\n              childWidth = _this$state.childWidth,\n              currentPage = _this$state.currentPage;\n          var isLastPage = data.length === currentPage;\n          var scrollX;\n\n          if (isLooped) {\n            var loopOffset = data.length >= NUM_OF_DUP ? NUM_OF_DUP : data.length;\n            scrollX = childWidth * (currentPage + loopOffset);\n          } else {\n            scrollX = isLastPage ? 0 : childWidth * currentPage;\n          }\n\n          _this.scrollView.current.scrollTo({\n            x: scrollX,\n            animated: true\n          });\n        }, autoplayInterval);\n      } else {\n        clearTimeout(_this.autoplayTimeout);\n      }\n    };\n\n    _this.onScroll = function (_ref) {\n      var x = _ref.nativeEvent.contentOffset.x;\n\n      _this.setAutoPlay(false);\n\n      var _this$props3 = _this.props,\n          data = _this$props3.data,\n          autoplay = _this$props3.autoplay;\n      var _this$state2 = _this.state,\n          prevPage = _this$state2.currentPage,\n          childWidth = _this$state2.childWidth;\n\n      var isLooped = _this.isLooped();\n\n      var loopOffset = 0;\n\n      if (isLooped) {\n        loopOffset = data.length >= NUM_OF_DUP ? NUM_OF_DUP : data.length;\n      }\n\n      var rawCurrentPage = x / childWidth;\n      var roundCurrentPage = Math.round(rawCurrentPage);\n      var normalizedPage = roundCurrentPage - loopOffset;\n      var currentPage = normalizedPage + 1;\n\n      if (normalizedPage < 0) {\n        currentPage = data.length + normalizedPage + 1;\n      } else if (normalizedPage >= data.length) {\n        currentPage = normalizedPage % data.length + 1;\n      }\n\n      var isScrollEnd = approximatelyEqualTo(rawCurrentPage, roundCurrentPage);\n\n      if (isLooped && isScrollEnd && (normalizedPage < 0 || normalizedPage >= data.length)) {\n        _this.scrollView.current.scrollTo({\n          x: (currentPage - 1 + loopOffset) * childWidth,\n          animated: false\n        });\n      }\n\n      if (isScrollEnd && autoplay) {\n        _this.setAutoPlay(true);\n      }\n\n      if (currentPage !== prevPage) {\n        _this.setState({\n          currentPage: currentPage\n        });\n\n        var onPage = _this.props.onPage;\n        onPage({\n          prev: prevPage,\n          current: currentPage\n        });\n      }\n    };\n\n    _this.onContentSizeChange = function (contentWidth) {\n      var _this$props4 = _this.props,\n          data = _this$props4.data,\n          autoplay = _this$props4.autoplay;\n\n      var isLooped = _this.isLooped();\n\n      var loopOffset = data.length >= NUM_OF_DUP ? NUM_OF_DUP : data.length;\n      var childrenNum = isLooped ? data.length + loopOffset * 2 : data.length;\n\n      _this.setState({\n        childWidth: contentWidth / childrenNum\n      }, function () {\n        if (isLooped) {\n          var childWidth = _this.state.childWidth;\n\n          _this.scrollView.current.scrollTo({\n            x: childWidth * loopOffset,\n            animated: false\n          });\n        }\n\n        if (autoplay) {\n          _this.setAutoPlay(true);\n        }\n      });\n    };\n\n    _this.renderItems = function () {\n      var _this$props5 = _this.props,\n          data = _this$props5.data,\n          renderItem = _this$props5.renderItem;\n      var normalizedData = data;\n\n      var isLooped = _this.isLooped();\n\n      var loopOffset = 0;\n\n      if (isLooped) {\n        var frontDup = data.slice(-NUM_OF_DUP);\n        var endDup = data.slice(0, NUM_OF_DUP);\n        loopOffset = frontDup.length;\n        normalizedData = frontDup.concat(data, endDup);\n      }\n\n      return normalizedData.map(function (item, index) {\n        var normalizedIndex = index - loopOffset;\n        var renderIndex = normalizedIndex % data.length;\n        renderIndex = renderIndex < 0 ? data.length + renderIndex : renderIndex;\n        var renderedItem = renderItem(item, renderIndex);\n        var key = renderedItem.key;\n\n        if (normalizedIndex < 0) {\n          key = key + \"-front-dup\";\n        } else if (normalizedIndex >= data.length) {\n          key = key + \"-end-dup\";\n        }\n\n        return React.createElement(React.Fragment, {\n          key: key,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 9\n          }\n        }, renderedItem);\n      });\n    };\n\n    _this.renderNumberPage = function () {\n      var _this$props6 = _this.props,\n          data = _this$props6.data,\n          NumberPagination = _this$props6.NumberPagination;\n      var currentPage = _this.state.currentPage;\n\n      if (!!NumberPagination) {\n        return React.createElement(NumberPagination, {\n          currentPage: currentPage,\n          total: data.length,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }\n        });\n      } else {\n        return null;\n      }\n    };\n\n    _this.renderPagination = function () {\n      var _this$props7 = _this.props,\n          data = _this$props7.data,\n          Pagination = _this$props7.pagination;\n      var currentPage = _this.state.currentPage;\n      var pagination = null;\n\n      if (Pagination) {\n        pagination = React.createElement(Pagination, {\n          currentPage: currentPage,\n          total: data.length,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return pagination;\n    };\n\n    _this.render = function () {\n      var childWidth = _this.state.childWidth;\n      return React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        ref: _this.scrollView,\n        style: [styles.scrollView, {\n          width: childWidth\n        }],\n        pagingEnabled: true,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        showsVerticalScrollIndicator: false,\n        bounces: true,\n        onScrollEndDrag: _this.onScrollEndDrag,\n        scrollEventThrottle: 16,\n        onScroll: _this.onScroll,\n        onContentSizeChange: _this.onContentSizeChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }\n      }, _this.renderItems()), _this.renderPagination(), _this.renderNumberPage());\n    };\n\n    return _this;\n  }\n\n  _createClass(Carousel, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setAutoPlay(false);\n    }\n  }]);\n\n  return Carousel;\n}(Component);\n\nexport { Carousel as default };\nvar styles = StyleSheet.create({\n  scrollView: {\n    flexGrow: 0\n  }\n});\nCarousel.propTypes = {\n  renderItem: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})),\n  loop: PropTypes.bool,\n  autoplay: PropTypes.bool,\n  autoplayInterval: PropTypes.number,\n  pagination: PropTypes.elementType,\n  onPage: PropTypes.func\n};\nCarousel.defaultProps = {\n  data: [],\n  loop: false,\n  autoplay: false,\n  autoplayInterval: 2000,\n  pagination: null,\n  onPage: function onPage() {}\n};","map":{"version":3,"sources":["/Users/nicolemogensen/PHOutcomes/node_modules/react-native-x2-carousel/src/Carousel.js"],"names":["React","Component","PropTypes","NUM_OF_DUP","approximatelyEqualTo","a","b","epsilon","Math","abs","Carousel","scrollView","createRef","state","currentPage","childWidth","isLooped","props","data","loop","length","setAutoPlay","start","autoplayInterval","autoplayTimeout","setTimeout","isLastPage","scrollX","loopOffset","current","scrollTo","x","animated","clearTimeout","onScroll","nativeEvent","contentOffset","autoplay","prevPage","rawCurrentPage","roundCurrentPage","round","normalizedPage","isScrollEnd","setState","onPage","prev","onContentSizeChange","contentWidth","childrenNum","renderItems","renderItem","normalizedData","frontDup","slice","endDup","concat","map","item","index","normalizedIndex","renderIndex","renderedItem","key","renderNumberPage","NumberPagination","renderPagination","Pagination","pagination","render","styles","width","onScrollEndDrag","StyleSheet","create","flexGrow","propTypes","func","isRequired","arrayOf","shape","bool","number","elementType","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  View,\n  ScrollView,\n  StyleSheet,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\nconst NUM_OF_DUP = 3;\n\nconst approximatelyEqualTo = (a, b, epsilon = 0.01) => Math.abs(a - b) < epsilon;\n\nexport default class Carousel extends Component {\n  scrollView = React.createRef();\n\n  state = {\n    currentPage: 1,\n    childWidth: 0,\n  }\n\n  componentWillUnmount() {\n    this.setAutoPlay(false);\n  }\n\n  isLooped = () => {\n    const { data, loop } = this.props;\n    return loop && data.length > 1;\n  }\n\n  setAutoPlay = (start) => {\n    if (start) {\n      this.setAutoPlay(false);\n      const { data, autoplayInterval } = this.props;\n      this.autoplayTimeout = setTimeout(() => {\n        const isLooped = this.isLooped();\n        const { childWidth, currentPage } = this.state;\n        const isLastPage = data.length === currentPage;\n\n        // compute new scroll x\n        let scrollX;\n        if (isLooped) {\n          const loopOffset = data.length >= NUM_OF_DUP ? NUM_OF_DUP : data.length;\n          scrollX = childWidth * (currentPage + loopOffset);\n        } else {\n          scrollX = isLastPage ? 0 : childWidth * currentPage;\n        }\n\n        this.scrollView.current.scrollTo({\n          x: scrollX,\n          animated: true,\n        });\n      }, autoplayInterval);\n    } else {\n      clearTimeout(this.autoplayTimeout);\n    }\n  }\n\n  onScroll = ({\n    nativeEvent: { contentOffset: { x } },\n  }) => {\n    this.setAutoPlay(false);\n    const { data, autoplay } = this.props;\n    const { currentPage: prevPage, childWidth } = this.state;\n    const isLooped = this.isLooped();\n\n    // compute loop offset\n    let loopOffset = 0;\n    if (isLooped) {\n      loopOffset = data.length >= NUM_OF_DUP ? NUM_OF_DUP : data.length;\n    }\n\n    // raw float page number\n    const rawCurrentPage = x / childWidth;\n    // rounded page number\n    const roundCurrentPage = Math.round(rawCurrentPage);\n    // cut front dup\n    const normalizedPage = roundCurrentPage - loopOffset;\n    // normalize page number\n    let currentPage = normalizedPage + 1;\n    if (normalizedPage < 0) {\n      currentPage = data.length + normalizedPage + 1;\n    } else if (normalizedPage >= data.length) {\n      currentPage = (normalizedPage % data.length) + 1;\n    }\n\n    const isScrollEnd = approximatelyEqualTo(rawCurrentPage, roundCurrentPage);\n    // reset loop offset\n    if (\n      isLooped\n      && isScrollEnd\n      && (\n        normalizedPage < 0\n        || normalizedPage >= data.length\n      )\n    ) {\n      this.scrollView.current.scrollTo({\n        x: (currentPage - 1 + loopOffset) * childWidth,\n        animated: false,\n      });\n    }\n\n    // restart autoplay\n    if (isScrollEnd && autoplay) {\n      this.setAutoPlay(true);\n    }\n\n    // page number changes\n    if (currentPage !== prevPage) {\n      this.setState({\n        currentPage,\n      });\n      const { onPage } = this.props;\n      onPage({\n        prev: prevPage,\n        current: currentPage,\n      });\n    }\n  }\n\n  onContentSizeChange = (contentWidth) => {\n    const { data, autoplay } = this.props;\n    const isLooped = this.isLooped();\n    const loopOffset = data.length >= NUM_OF_DUP ? NUM_OF_DUP : data.length;\n\n    // compute total number of children\n    const childrenNum = isLooped ? data.length + loopOffset * 2 : data.length;\n\n    this.setState({\n      childWidth: contentWidth / childrenNum,\n    }, () => {\n      // set loop initial offset\n      if (isLooped) {\n        const { childWidth } = this.state;\n        this.scrollView.current.scrollTo({\n          x: childWidth * loopOffset,\n          animated: false,\n        });\n      }\n      if (autoplay) {\n        this.setAutoPlay(true);\n      }\n    });\n  }\n\n  renderItems = () => {\n    const {\n      data,\n      renderItem,\n    } = this.props;\n\n    let normalizedData = data;\n    const isLooped = this.isLooped();\n    let loopOffset = 0;\n    if (isLooped) {\n      const frontDup = data.slice(-NUM_OF_DUP);\n      const endDup = data.slice(0, NUM_OF_DUP);\n      loopOffset = frontDup.length;\n      normalizedData = frontDup.concat(data, endDup);\n    }\n\n    return normalizedData.map((item, index) => {\n      const normalizedIndex = index - loopOffset;\n      // renderIndex should be within the range of [0, data.length - 1]\n      let renderIndex = normalizedIndex % data.length;\n      renderIndex = renderIndex < 0 ? data.length + renderIndex : renderIndex;\n      const renderedItem = renderItem(item, renderIndex);\n\n      // avoid duplicated keys\n      let { key } = renderedItem;\n      if (normalizedIndex < 0) {\n        key = `${key}-front-dup`;\n      } else if (normalizedIndex >= data.length) {\n        key = `${key}-end-dup`;\n      }\n      return (\n        <React.Fragment key={key}>\n          {renderedItem}\n        </React.Fragment>\n      );\n    });\n  }\n\n  renderNumberPage = () => {\n    const { data, NumberPagination } = this.props;\n    const { currentPage } = this.state;\n\n    if (!!NumberPagination) {\n      return (<NumberPagination\n        currentPage={currentPage}\n        total={data.length}\n      />)\n    } else {\n      return null;\n    }\n  }\n\n  renderPagination = () => {\n    const {\n      data,\n      pagination: Pagination,\n    } = this.props;\n    const { currentPage } = this.state;\n\n    let pagination = null;\n    if (Pagination) {\n      pagination = (\n        <Pagination\n          currentPage={currentPage}\n          total={data.length}\n        />\n      );\n    }\n    return pagination;\n  }\n\n  render = () => {\n    const {\n      childWidth,\n    } = this.state;\n\n    return (\n      <View>\n        <ScrollView\n          ref={this.scrollView}\n          style={[\n            styles.scrollView,\n            { width: childWidth },\n          ]}\n          pagingEnabled\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          bounces={true}\n          // iOS & Android should have used onMomentumScrollEnd\n          // the issue https://github.com/facebook/react-native/issues/21718\n          // onMomentumScrollEnd={this.onMomentumScrollEnd}\n          onScrollEndDrag={this.onScrollEndDrag}\n          scrollEventThrottle={16}\n          onScroll={this.onScroll}\n          onContentSizeChange={this.onContentSizeChange}\n        >\n          {\n            this.renderItems()\n          }\n        </ScrollView>\n        {\n          this.renderPagination()\n        }\n        {\n          this.renderNumberPage()\n        }\n      </View>\n    );\n  };\n}\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    flexGrow: 0,\n  },\n});\n\nCarousel.propTypes = {\n  renderItem: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})),\n  loop: PropTypes.bool,\n  autoplay: PropTypes.bool,\n  autoplayInterval: PropTypes.number,\n  pagination: PropTypes.elementType,\n  onPage: PropTypes.func,\n};\n\nCarousel.defaultProps = {\n  data: [],\n  loop: false,\n  autoplay: false,\n  autoplayInterval: 2000,\n  pagination: null,\n  onPage: () => { },\n};\n"]},"metadata":{},"sourceType":"module"}