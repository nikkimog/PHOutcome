{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicolemogensen/PHOutcomes/src/screens/BladderOutcomeMeasures/UDI/bladderquestions/UDIHome.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { RadioButton } from \"react-native-paper\";\nimport QuestionOne from \"./QuestionOne\";\nimport QuestionTwo from \"./QuestionTwo\";\nimport QuestionThree from \"./QuestionThree\";\nimport QuestionFour from \"./QuestionFour\";\nimport QuestionFive from \"./QuestionFive\";\nimport QuestionSix from \"./QuestionSix\";\nimport QuestionSeven from \"./QuestionSeven\";\nimport { calculateQ1 } from \"./QuestionOne\";\nimport { calculateQ2 } from \"./QuestionTwo\";\nimport { calculateQ3 } from \"./QuestionThree\";\nimport { calculateQ4 } from \"./QuestionFour\";\nimport { calculateQ5 } from \"./QuestionFive\";\nimport { calculateQ6 } from \"./QuestionSix\";\nimport { calculateQ7 } from \"./QuestionSeven\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport qs from \"qs\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\n\nfunction sendEmail(to, subject, body) {\n  var options,\n      cc,\n      bcc,\n      url,\n      query,\n      canOpen,\n      _args = arguments;\n  return _regeneratorRuntime.async(function sendEmail$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n          cc = options.cc, bcc = options.bcc;\n          url = \"mailto:\" + to;\n          query = qs.stringify({\n            subject: subject,\n            body: body,\n            cc: cc,\n            bcc: bcc\n          });\n\n          if (query.length) {\n            url += \"?\" + query;\n          }\n\n          console.log(\"url\", url);\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(Linking.canOpenURL(url));\n\n        case 8:\n          canOpen = _context.sent;\n\n          if (canOpen) {\n            _context.next = 11;\n            break;\n          }\n\n          throw new Error(\"Provided URL can not be handled\");\n\n        case 11:\n          return _context.abrupt(\"return\", Linking.openURL(url));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar total = 0;\nexport default function UDIHome(props) {\n  console.log(\"props\", props);\n  var email = props.route.params.email.text;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      score = _React$useState2[0],\n      setScore = _React$useState2[1];\n\n  function scoreMathz() {\n    total = 0;\n    total = calculateQ1() + calculateQ2() + calculateQ3() + calculateQ4() + calculateQ5() + calculateQ6() + calculateQ7();\n    console.log(calculateQ7(), \"calculateq7\");\n    setScore(total);\n  }\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, \"Has urine leakage (incontinence) affected your:\"), React.createElement(QuestionOne, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }), React.createElement(QuestionTwo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }), React.createElement(QuestionThree, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }\n  }), React.createElement(QuestionFour, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }), React.createElement(QuestionFive, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }\n  }), React.createElement(QuestionSix, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }\n  }), React.createElement(QuestionSeven, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }\n  }), React.createElement(Button, {\n    title: \"calculate score\",\n    onPress: function onPress() {\n      return scoreMathz();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }, \"Score: \", score, \"\\n\", \"\\n\"), React.createElement(Button, {\n    title: \"send score to your provider\",\n    onPress: function onPress() {\n      return sendEmail(email, \"score\", \"udiscore\").then(function () {\n        console.log(\"Our email successful provided to device mail \");\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/nicolemogensen/PHOutcomes/src/screens/BladderOutcomeMeasures/UDI/bladderquestions/UDIHome.js"],"names":["StatusBar","React","RadioButton","QuestionOne","QuestionTwo","QuestionThree","QuestionFour","QuestionFive","QuestionSix","QuestionSeven","calculateQ1","calculateQ2","calculateQ3","calculateQ4","calculateQ5","calculateQ6","calculateQ7","createStackNavigator","NavigationContainer","qs","sendEmail","to","subject","body","options","cc","bcc","url","query","stringify","length","console","log","Linking","canOpenURL","canOpen","Error","openURL","total","UDIHome","props","email","route","params","text","useState","score","setScore","scoreMathz","styles","container","textAlign","then","StyleSheet","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport {\n\tStyleSheet,\n\tText,\n\tView,\n\tImage,\n\tSafeAreaView,\n\tButton,\n\tScrollView,\n\tTextInput,\n} from \"react-native\";\nimport { RadioButton } from \"react-native-paper\";\nimport QuestionOne from \"./QuestionOne\";\nimport QuestionTwo from \"./QuestionTwo\";\nimport QuestionThree from \"./QuestionThree\";\nimport QuestionFour from \"./QuestionFour\";\nimport QuestionFive from \"./QuestionFive\";\nimport QuestionSix from \"./QuestionSix\";\nimport QuestionSeven from \"./QuestionSeven\";\nimport { calculateQ1 } from \"./QuestionOne\";\nimport { calculateQ2 } from \"./QuestionTwo\";\nimport { calculateQ3 } from \"./QuestionThree\";\nimport { calculateQ4 } from \"./QuestionFour\";\nimport { calculateQ5 } from \"./QuestionFive\";\nimport { calculateQ6 } from \"./QuestionSix\";\nimport { calculateQ7 } from \"./QuestionSeven\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport qs from \"qs\";\nimport { Linking } from \"react-native\";\n\nasync function sendEmail(to, subject, body, options = {}) {\n\tconst { cc, bcc } = options;\n\n\tlet url = `mailto:${to}`;\n\n\t// Create email link query\n\tconst query = qs.stringify({\n\t\tsubject: subject,\n\t\tbody: body,\n\t\tcc: cc,\n\t\tbcc: bcc,\n\t});\n\n\tif (query.length) {\n\t\turl += `?${query}`;\n\t}\n\tconsole.log(\"url\", url);\n\n\t// check if we can use this link\n\tconst canOpen = await Linking.canOpenURL(url);\n\n\tif (!canOpen) {\n\t\tthrow new Error(\"Provided URL can not be handled\");\n\t}\n\n\treturn Linking.openURL(url);\n}\n\nlet total = 0;\nexport default function UDIHome(props) {\n\tconsole.log(\"props\", props);\n\tlet email = props.route.params.email.text;\n\tconst [score, setScore] = React.useState(0);\n\n\t// const [q7, setQ7] = React.useState(0);\n\tfunction scoreMathz() {\n\t\ttotal = 0;\n\t\t// setQ7(calculateQ7());\n\t\ttotal =\n\t\t\tcalculateQ1() +\n\t\t\tcalculateQ2() +\n\t\t\tcalculateQ3() +\n\t\t\tcalculateQ4() +\n\t\t\tcalculateQ5() +\n\t\t\tcalculateQ6() +\n\t\t\tcalculateQ7();\n\t\tconsole.log(calculateQ7(), \"calculateq7\");\n\t\tsetScore(total);\n\t}\n\treturn (\n\t\t<ScrollView style={styles.container}>\n\t\t\t<Text>Has urine leakage (incontinence) affected your:</Text>\n\n\t\t\t<QuestionOne />\n\t\t\t<QuestionTwo />\n\t\t\t<QuestionThree />\n\t\t\t<QuestionFour />\n\t\t\t<QuestionFive />\n\t\t\t<QuestionSix />\n\t\t\t<QuestionSeven />\n\t\t\t<Button title=\"calculate score\" onPress={() => scoreMathz()} />\n\t\t\t<Text style={{ textAlign: \"center\" }}>\n\t\t\t\tScore: {score}\n\t\t\t\t{\"\\n\"}\n\t\t\t\t{\"\\n\"}\n\t\t\t</Text>\n\t\t\t<Button\n\t\t\t\ttitle=\"send score to your provider\"\n\t\t\t\tonPress={() =>\n\t\t\t\t\tsendEmail(email, \"score\", \"udiscore\").then(() => {\n\t\t\t\t\t\tconsole.log(\"Our email successful provided to device mail \");\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\t\t</ScrollView>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"white\",\n\t\t// margin: 15,\n\t\t// alignItems: \"center\",\n\t\t// justifyContent: \"center\",\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}