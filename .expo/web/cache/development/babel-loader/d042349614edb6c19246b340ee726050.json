{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicolemogensen/PHOutcomes/src/screens/RegistrationScreen/RegistrationScreen.js\";\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport styles from \"./styles\";\nimport { firebase } from \"../../firebase/config\";\nexport default function RegistrationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullName = _useState2[0],\n      setFullName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var onFooterLinkPress = function onFooterLinkPress() {\n    navigation.navigate(\"Login\");\n  };\n\n  var onRegisterPress = function onRegisterPress() {\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match.\");\n      return;\n    }\n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var data = {\n        id: uid,\n        email: email,\n        fullName: fullName\n      };\n      var usersRef = firebase.firestore().collection(\"users\");\n      usersRef.doc(uid).set(data).then(function () {\n        navigation.navigate(\"Home\", {\n          user: data\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    style: {\n      flex: 1,\n      width: \"100%\"\n    },\n    keyboardShouldPersistTaps: \"always\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../../assets/icon.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Full Name\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setFullName(text);\n    },\n    value: fullName,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"E-mail\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(text) {\n      return setConfirmPassword(text);\n    },\n    value: confirmPassword,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onRegisterPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 6\n    }\n  }, \"Create account\")), React.createElement(View, {\n    style: styles.footerView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }\n  }, \"Already got an account?\", \" \", React.createElement(Text, {\n    onPress: onFooterLinkPress,\n    style: styles.footerLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Log in\")))));\n}","map":{"version":3,"sources":["/Users/nicolemogensen/PHOutcomes/src/screens/RegistrationScreen/RegistrationScreen.js"],"names":["React","useState","KeyboardAwareScrollView","styles","firebase","RegistrationScreen","navigation","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onFooterLinkPress","navigate","onRegisterPress","alert","auth","createUserWithEmailAndPassword","then","response","uid","user","data","id","usersRef","firestore","collection","doc","set","catch","error","container","flex","width","logo","require","input","text","button","buttonTitle","footerView","footerText","footerLink"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Image, Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport styles from \"./styles\";\nimport { firebase } from \"../../firebase/config\";\n\nexport default function RegistrationScreen({ navigation }) {\n\tconst [fullName, setFullName] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\n\n\tconst onFooterLinkPress = () => {\n\t\tnavigation.navigate(\"Login\");\n\t};\n\n\tconst onRegisterPress = () => {\n\t\tif (password !== confirmPassword) {\n\t\t\talert(\"Passwords don't match.\");\n\t\t\treturn;\n\t\t}\n\n\t\tfirebase\n\t\t\t.auth()\n\t\t\t.createUserWithEmailAndPassword(email, password)\n\t\t\t.then((response) => {\n\t\t\t\tconst uid = response.user.uid;\n\t\t\t\tconst data = {\n\t\t\t\t\tid: uid,\n\t\t\t\t\temail,\n\t\t\t\t\tfullName,\n\t\t\t\t};\n\t\t\t\tconst usersRef = firebase.firestore().collection(\"users\");\n\t\t\t\tusersRef\n\t\t\t\t\t.doc(uid)\n\t\t\t\t\t.set(data)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tnavigation.navigate(\"Home\", { user: data });\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\talert(error);\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\talert(error);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<KeyboardAwareScrollView\n\t\t\t\tstyle={{ flex: 1, width: \"100%\" }}\n\t\t\t\tkeyboardShouldPersistTaps=\"always\"\n\t\t\t>\n\t\t\t\t<Image\n\t\t\t\t\tstyle={styles.logo}\n\t\t\t\t\tsource={require(\"../../../assets/icon.png\")}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\tplaceholder=\"Full Name\"\n\t\t\t\t\tplaceholderTextColor=\"#aaaaaa\"\n\t\t\t\t\tonChangeText={(text) => setFullName(text)}\n\t\t\t\t\tvalue={fullName}\n\t\t\t\t\tunderlineColorAndroid=\"transparent\"\n\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\tplaceholder=\"E-mail\"\n\t\t\t\t\tplaceholderTextColor=\"#aaaaaa\"\n\t\t\t\t\tonChangeText={(text) => setEmail(text)}\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tunderlineColorAndroid=\"transparent\"\n\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\tplaceholderTextColor=\"#aaaaaa\"\n\t\t\t\t\tsecureTextEntry\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\tonChangeText={(text) => setPassword(text)}\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tunderlineColorAndroid=\"transparent\"\n\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\tplaceholderTextColor=\"#aaaaaa\"\n\t\t\t\t\tsecureTextEntry\n\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\tonChangeText={(text) => setConfirmPassword(text)}\n\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\tunderlineColorAndroid=\"transparent\"\n\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t/>\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\tonPress={() => onRegisterPress()}\n\t\t\t\t>\n\t\t\t\t\t<Text style={styles.buttonTitle}>Create account</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t\t<View style={styles.footerView}>\n\t\t\t\t\t<Text style={styles.footerText}>\n\t\t\t\t\t\tAlready got an account?{\" \"}\n\t\t\t\t\t\t<Text onPress={onFooterLinkPress} style={styles.footerLink}>\n\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t</KeyboardAwareScrollView>\n\t\t</View>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}