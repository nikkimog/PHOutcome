{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport qs from \"qs\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nexport default function sendEmail(to, subject, body) {\n  var options,\n      cc,\n      bcc,\n      url,\n      query,\n      canOpen,\n      _args = arguments;\n  return _regeneratorRuntime.async(function sendEmail$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n          cc = options.cc, bcc = options.bcc;\n          url = \"mailto:\" + to;\n          query = qs.stringify({\n            subject: subject,\n            body: body,\n            cc: cc,\n            bcc: bcc\n          });\n\n          if (query.length) {\n            url += \"?\" + query;\n          }\n\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(Linking.canOpenURL(url));\n\n        case 7:\n          canOpen = _context.sent;\n\n          if (canOpen) {\n            _context.next = 10;\n            break;\n          }\n\n          throw new Error(\"Provided URL can not be handled\");\n\n        case 10:\n          return _context.abrupt(\"return\", Linking.openURL(url));\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/nicolemogensen/PHOutcomes/src/screens/sendEmail.js"],"names":["qs","sendEmail","to","subject","body","options","cc","bcc","url","query","stringify","length","Linking","canOpenURL","canOpen","Error","openURL"],"mappings":";AAAA,OAAOA,EAAP,MAAe,IAAf;;AAGA,eAAe,SAAeC,SAAf,CAAyBC,EAAzB,EAA6BC,OAA7B,EAAsCC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4CC,UAAAA,OAA5C,2DAAsD,EAAtD;AACNC,UAAAA,EADM,GACMD,OADN,CACNC,EADM,EACFC,GADE,GACMF,OADN,CACFE,GADE;AAGVC,UAAAA,GAHU,eAGMN,EAHN;AAKRO,UAAAA,KALQ,GAKAT,EAAE,CAACU,SAAH,CAAa;AAC1BP,YAAAA,OAAO,EAAEA,OADiB;AAE1BC,YAAAA,IAAI,EAAEA,IAFoB;AAG1BE,YAAAA,EAAE,EAAEA,EAHsB;AAI1BC,YAAAA,GAAG,EAAEA;AAJqB,WAAb,CALA;;AAYd,cAAIE,KAAK,CAACE,MAAV,EAAkB;AACjBH,YAAAA,GAAG,UAAQC,KAAX;AACA;;AAda;AAAA,2CAgBQG,OAAO,CAACC,UAAR,CAAmBL,GAAnB,CAhBR;;AAAA;AAgBRM,UAAAA,OAhBQ;;AAAA,cAkBTA,OAlBS;AAAA;AAAA;AAAA;;AAAA,gBAmBP,IAAIC,KAAJ,CAAU,iCAAV,CAnBO;;AAAA;AAAA,2CAsBPH,OAAO,CAACI,OAAR,CAAgBR,GAAhB,CAtBO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import qs from \"qs\";\nimport { Linking } from \"react-native\";\n\nexport default async function sendEmail(to, subject, body, options = {}) {\n\tconst { cc, bcc } = options;\n\n\tlet url = `mailto:${to}`;\n\n\tconst query = qs.stringify({\n\t\tsubject: subject,\n\t\tbody: body,\n\t\tcc: cc,\n\t\tbcc: bcc,\n\t});\n\n\tif (query.length) {\n\t\turl += `?${query}`;\n\t}\n\n\tconst canOpen = await Linking.canOpenURL(url);\n\n\tif (!canOpen) {\n\t\tthrow new Error(\"Provided URL can not be handled\");\n\t}\n\n\treturn Linking.openURL(url);\n}\n"]},"metadata":{},"sourceType":"module"}