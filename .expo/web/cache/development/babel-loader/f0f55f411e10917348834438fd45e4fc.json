{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicolemogensen/PHOutcomes/App.js\";\nimport \"react-native-gesture-handler\";\nimport React, { useEffect, useState } from \"react\";\nimport { firebase } from \"./src/firebase/config\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { LoginScreen, HomeScreen, Main, RegistrationScreen } from \"./src/screens\";\nimport { decode, encode } from \"base-64\";\n\nif (!global.btoa) {\n  global.btoa = encode;\n}\n\nif (!global.atob) {\n  global.atob = decode;\n}\n\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  useEffect(function () {\n    var usersRef = firebase.firestore().collection(\"users\");\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        usersRef.doc(user.uid).get().then(function (document) {\n          var userData = document.data();\n          setLoading(false);\n          setUser(userData);\n        }).catch(function (error) {\n          setLoading(false);\n        });\n      } else {\n        setLoading(false);\n      }\n    });\n  }, []);\n\n  if (loading) {\n    return React.createElement(React.Fragment, null);\n  }\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, user ? React.createElement(Stack.Screen, {\n    name: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, function (props) {\n    return React.createElement(HomeScreen, _extends({}, props, {\n      extraData: user,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }));\n  }) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Registration\",\n    component: RegistrationScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/nicolemogensen/PHOutcomes/App.js"],"names":["React","useEffect","useState","firebase","NavigationContainer","createStackNavigator","LoginScreen","HomeScreen","Main","RegistrationScreen","decode","encode","global","btoa","atob","Stack","App","loading","setLoading","user","setUser","usersRef","firestore","collection","auth","onAuthStateChanged","doc","uid","get","then","document","userData","data","catch","error","props"],"mappings":";;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SACCC,WADD,EAECC,UAFD,EAGCC,IAHD,EAICC,kBAJD;AAMA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,SAA/B;;AACA,IAAI,CAACC,MAAM,CAACC,IAAZ,EAAkB;AACjBD,EAAAA,MAAM,CAACC,IAAP,GAAcF,MAAd;AACA;;AACD,IAAI,CAACC,MAAM,CAACE,IAAZ,EAAkB;AACjBF,EAAAA,MAAM,CAACE,IAAP,GAAcJ,MAAd;AACA;;AAED,IAAMK,KAAK,GAAGV,oBAAoB,EAAlC;AAEA,eAAe,SAASW,GAAT,GAAe;AAAA;;AAAA,kBACCd,QAAQ,CAAC,IAAD,CADT;AAAA;AAAA,MACtBe,OADsB;AAAA,MACbC,UADa;;AAAA,mBAELhB,QAAQ,CAAC,IAAD,CAFH;AAAA;AAAA,MAEtBiB,IAFsB;AAAA,MAEhBC,OAFgB;;AAI7BnB,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMoB,QAAQ,GAAGlB,QAAQ,CAACmB,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAjB;AACApB,IAAAA,QAAQ,CAACqB,IAAT,GAAgBC,kBAAhB,CAAmC,UAACN,IAAD,EAAU;AAC5C,UAAIA,IAAJ,EAAU;AACTE,QAAAA,QAAQ,CACNK,GADF,CACMP,IAAI,CAACQ,GADX,EAEEC,GAFF,GAGEC,IAHF,CAGO,UAACC,QAAD,EAAc;AACnB,cAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,EAAjB;AACAd,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,UAAAA,OAAO,CAACW,QAAD,CAAP;AACA,SAPF,EAQEE,KARF,CAQQ,UAACC,KAAD,EAAW;AACjBhB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACA,SAVF;AAWA,OAZD,MAYO;AACNA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD,KAhBD;AAiBA,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,MAAID,OAAJ,EAAa;AACZ,WAAO,yCAAP;AACA;;AAED,SACC,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEE,IAAI,GACJ,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,UAACgB,KAAD;AAAA,WAAW,oBAAC,UAAD,eAAgBA,KAAhB;AAAuB,MAAA,SAAS,EAAEhB,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;AAAA,GADF,CADI,GAKJ,0CACC,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEb,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,cAAnB;AAAkC,IAAA,SAAS,EAAEG,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CANF,CADD,CADD;AAgBA","sourcesContent":["import \"react-native-gesture-handler\";\nimport React, { useEffect, useState } from \"react\";\nimport { firebase } from \"./src/firebase/config\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport {\n\tLoginScreen,\n\tHomeScreen,\n\tMain,\n\tRegistrationScreen,\n} from \"./src/screens\";\nimport { decode, encode } from \"base-64\";\nif (!global.btoa) {\n\tglobal.btoa = encode;\n}\nif (!global.atob) {\n\tglobal.atob = decode;\n}\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n\tconst [loading, setLoading] = useState(true);\n\tconst [user, setUser] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst usersRef = firebase.firestore().collection(\"users\");\n\t\tfirebase.auth().onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\tusersRef\n\t\t\t\t\t.doc(user.uid)\n\t\t\t\t\t.get()\n\t\t\t\t\t.then((document) => {\n\t\t\t\t\t\tconst userData = document.data();\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\tsetUser(userData);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t});\n\t}, []);\n\n\tif (loading) {\n\t\treturn <></>;\n\t}\n\n\treturn (\n\t\t<NavigationContainer>\n\t\t\t<Stack.Navigator>\n\t\t\t\t{user ? (\n\t\t\t\t\t<Stack.Screen name=\"Home\">\n\t\t\t\t\t\t{(props) => <HomeScreen {...props} extraData={user} />}\n\t\t\t\t\t</Stack.Screen>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Stack.Screen name=\"Login\" component={LoginScreen} />\n\t\t\t\t\t\t<Stack.Screen name=\"Registration\" component={RegistrationScreen} />\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Stack.Navigator>\n\t\t</NavigationContainer>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}