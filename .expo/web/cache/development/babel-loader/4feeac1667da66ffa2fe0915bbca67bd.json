{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicolemogensen/PHOutcomes/src/screens/PelvicPainOutcomeMeasures/VP/VPHome.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button } from \"react-native-paper\";\nimport QuestionOne from \"./QuestionOne\";\nimport QuestionTwo from \"./QuestionTwo\";\nimport QuestionThree from \"./QuestionThree\";\nimport QuestionFour from \"./QuestionFour\";\nimport QuestionFive from \"./QuestionFive\";\nimport { calculateQ1 } from \"./QuestionOne\";\nimport { calculateQ2 } from \"./QuestionTwo\";\nimport { calculateQ3 } from \"./QuestionThree\";\nimport { calculateQ4 } from \"./QuestionFour\";\nimport { calculateQ5 } from \"./QuestionFive\";\nimport qs from \"qs\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { Banner } from \"react-native-paper\";\n\nfunction sendEmail(to, subject, body) {\n  var options,\n      cc,\n      bcc,\n      url,\n      query,\n      canOpen,\n      _args = arguments;\n  return _regeneratorRuntime.async(function sendEmail$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n          cc = options.cc, bcc = options.bcc;\n          url = \"mailto:\" + to;\n          query = qs.stringify({\n            subject: subject,\n            body: body,\n            cc: cc,\n            bcc: bcc\n          });\n\n          if (query.length) {\n            url += \"?\" + query;\n          }\n\n          console.log(\"url\", url);\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(Linking.canOpenURL(url));\n\n        case 8:\n          canOpen = _context.sent;\n\n          if (canOpen) {\n            _context.next = 11;\n            break;\n          }\n\n          throw new Error(\"Provided URL can not be handled\");\n\n        case 11:\n          return _context.abrupt(\"return\", Linking.openURL(url));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar total = 0;\nexport default function VPHome(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  console.log(\"props\", props);\n  var email = props.route.params.email.text;\n\n  var _React$useState3 = React.useState(\"Tap above to calcluate!\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      score = _React$useState4[0],\n      setScore = _React$useState4[1];\n\n  function scoreMathz() {\n    total = 0;\n    total = calculateQ1() + calculateQ2() + calculateQ3() + calculateQ4() + calculateQ5();\n    setScore(total);\n  }\n\n  var today = new Date();\n  var date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  var dateTime = date + \" \" + time;\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }\n  }, React.createElement(Banner, {\n    visible: visible,\n    actions: [{\n      label: \"Got it\",\n      onPress: function onPress() {\n        return setVisible(false);\n      }\n    }],\n    icon: \"check\",\n    style: {\n      fontName: \"ArialMT\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }\n  }, \"Make sure to choose an answer for each question.\"), React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }, \"Please choose the item that best describes your situation.\"), React.createElement(QuestionOne, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }\n  }), React.createElement(QuestionTwo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }), React.createElement(QuestionThree, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }), React.createElement(QuestionFour, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }\n  }), React.createElement(QuestionFive, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    title: \"click here\",\n    labelStyle: {\n      color: \"white\"\n    },\n    style: {\n      width: 200,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    },\n    onPress: function onPress() {\n      return scoreMathz();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }\n  }, \"Calculate Score\"), React.createElement(Button, {\n    title: \"calculate score\",\n    onPress: function onPress() {\n      return scoreMathz();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      fontSize: 22,\n      fontStyle: \"italic\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }\n  }, \"Score: \", score, \"\\n\", \"\\n\"), React.createElement(Button, {\n    labelStyle: {\n      color: \"white\"\n    },\n    style: {\n      width: 300,\n      marginBottom: 80,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    },\n    mode: \"contained\",\n    color: \"gray\",\n    onPress: function onPress() {\n      return sendEmail(email, \"VP Score\", \"Hello, \" + \"\\n\" + \" My VP score on \" + dateTime + \" was \" + score + \".\" + \"\\n\" + \" Thank you\").then(function () {\n        console.log(\"Our email successful provided to device mail \");\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }\n  }, \"Send score to your provider\"));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    alignContent: \"center\"\n  },\n  header: {\n    fontSize: 26,\n    textAlign: \"center\",\n    margin: 10\n  },\n  button: {\n    margin: 20,\n    backgroundColor: \"orange\"\n  }\n});","map":{"version":3,"sources":["/Users/nicolemogensen/PHOutcomes/src/screens/PelvicPainOutcomeMeasures/VP/VPHome.js"],"names":["React","Button","QuestionOne","QuestionTwo","QuestionThree","QuestionFour","QuestionFive","calculateQ1","calculateQ2","calculateQ3","calculateQ4","calculateQ5","qs","Banner","sendEmail","to","subject","body","options","cc","bcc","url","query","stringify","length","console","log","Linking","canOpenURL","canOpen","Error","openURL","total","VPHome","props","useState","visible","setVisible","email","route","params","text","score","setScore","scoreMathz","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","dateTime","styles","container","label","onPress","fontName","header","color","width","marginLeft","marginRight","textAlign","fontSize","fontStyle","marginBottom","then","StyleSheet","create","flex","backgroundColor","alignContent","margin","button"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AAEA,SAASC,WAAT;AACA,SAASC,WAAT;AACA,SAASC,WAAT;AACA,SAASC,WAAT;AACA,SAASC,WAAT;AAEA,OAAOC,EAAP,MAAe,IAAf;;AAEA,SAASC,MAAT,QAAuB,oBAAvB;;AAEA,SAAeC,SAAf,CAAyBC,EAAzB,EAA6BC,OAA7B,EAAsCC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4CC,UAAAA,OAA5C,2DAAsD,EAAtD;AACSC,UAAAA,EADT,GACqBD,OADrB,CACSC,EADT,EACaC,GADb,GACqBF,OADrB,CACaE,GADb;AAGKC,UAAAA,GAHL,eAGqBN,EAHrB;AAMOO,UAAAA,KANP,GAMeV,EAAE,CAACW,SAAH,CAAa;AAC1BP,YAAAA,OAAO,EAAEA,OADiB;AAE1BC,YAAAA,IAAI,EAAEA,IAFoB;AAG1BE,YAAAA,EAAE,EAAEA,EAHsB;AAI1BC,YAAAA,GAAG,EAAEA;AAJqB,WAAb,CANf;;AAaC,cAAIE,KAAK,CAACE,MAAV,EAAkB;AACjBH,YAAAA,GAAG,UAAQC,KAAX;AACA;;AACDG,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,GAAnB;AAhBD;AAAA,2CAmBuBM,OAAO,CAACC,UAAR,CAAmBP,GAAnB,CAnBvB;;AAAA;AAmBOQ,UAAAA,OAnBP;;AAAA,cAqBMA,OArBN;AAAA;AAAA;AAAA;;AAAA,gBAsBQ,IAAIC,KAAJ,CAAU,iCAAV,CAtBR;;AAAA;AAAA,2CAyBQH,OAAO,CAACI,OAAR,CAAgBV,GAAhB,CAzBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4BA,IAAIW,KAAK,GAAG,CAAZ;AACA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,wBACPlC,KAAK,CAACmC,QAAN,CAAe,IAAf,CADO;AAAA;AAAA,MAC9BC,OAD8B;AAAA,MACrBC,UADqB;;AAErCZ,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB;AACA,MAAII,KAAK,GAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBF,KAAnB,CAAyBG,IAArC;;AAHqC,yBAIXzC,KAAK,CAACmC,QAAN,CAAe,yBAAf,CAJW;AAAA;AAAA,MAI9BO,KAJ8B;AAAA,MAIvBC,QAJuB;;AAOrC,WAASC,UAAT,GAAsB;AACrBZ,IAAAA,KAAK,GAAG,CAAR;AAEAA,IAAAA,KAAK,GACJzB,WAAW,KACXC,WAAW,EADX,GAEAC,WAAW,EAFX,GAGAC,WAAW,EAHX,GAIAC,WAAW,EALZ;AAMAgC,IAAAA,QAAQ,CAACX,KAAD,CAAR;AACA;;AACD,MAAIa,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIC,IAAI,GACPF,KAAK,CAACG,WAAN,KAAsB,GAAtB,IAA6BH,KAAK,CAACI,QAAN,KAAmB,CAAhD,IAAqD,GAArD,GAA2DJ,KAAK,CAACK,OAAN,EAD5D;AAEA,MAAIC,IAAI,GACPN,KAAK,CAACO,QAAN,KAAmB,GAAnB,GAAyBP,KAAK,CAACQ,UAAN,EAAzB,GAA8C,GAA9C,GAAoDR,KAAK,CAACS,UAAN,EADrD;AAEA,MAAIC,QAAQ,GAAGR,IAAI,GAAG,GAAP,GAAaI,IAA5B;AAEA,SACC,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEK,MAAM,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AACC,IAAA,OAAO,EAAErB,OADV;AAEC,IAAA,OAAO,EAAE,CACR;AACCsB,MAAAA,KAAK,EAAE,QADR;AAECC,MAAAA,OAAO,EAAE;AAAA,eAAMtB,UAAU,CAAC,KAAD,CAAhB;AAAA;AAFV,KADQ,CAFV;AAQC,IAAA,IAAI,EAAC,OARN;AASC,IAAA,KAAK,EAAE;AAAEuB,MAAAA,QAAQ,EAAE;AAAZ,KATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADD,EAcC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAdD,EAiBC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBD,EAkBC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBD,EAmBC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBD,EAoBC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBD,EAqBC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBD,EAuBC,oBAAC,MAAD;AACC,IAAA,IAAI,EAAC,WADN;AAEC,IAAA,KAAK,EAAC,YAFP;AAGC,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAHb;AAKC,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,UAAU,EAAE,MAA1B;AAAkCC,MAAAA,WAAW,EAAE;AAA/C,KALR;AAMC,IAAA,OAAO,EAAE;AAAA,aAAMrB,UAAU,EAAhB;AAAA,KANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAvBD,EAiCC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,iBAAd;AAAgC,IAAA,OAAO,EAAE;AAAA,aAAMA,UAAU,EAAhB;AAAA,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCD,EAkCC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEsB,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,QAAQ,EAAE,EAAjC;AAAqCC,MAAAA,SAAS,EAAE;AAAhD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACS1B,KADT,EAEE,IAFF,EAGE,IAHF,CAlCD,EAuCC,oBAAC,MAAD;AACC,IAAA,UAAU,EAAE;AAAEoB,MAAAA,KAAK,EAAE;AAAT,KADb;AAEC,IAAA,KAAK,EAAE;AAENC,MAAAA,KAAK,EAAE,GAFD;AAGNM,MAAAA,YAAY,EAAE,EAHR;AAINL,MAAAA,UAAU,EAAE,MAJN;AAKNC,MAAAA,WAAW,EAAE;AALP,KAFR;AASC,IAAA,IAAI,EAAC,WATN;AAUC,IAAA,KAAK,EAAC,MAVP;AAWC,IAAA,OAAO,EAAE;AAAA,aACRnD,SAAS,CACRwB,KADQ,EAER,UAFQ,cAGE,IAHF,wBAGyBiB,QAHzB,aAGyCb,KAHzC,SAGkD,IAHlD,gBAAT,CAIE4B,IAJF,CAIO,YAAM;AACZ7C,QAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACA,OAND,CADQ;AAAA,KAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAvCD,CADD;AAiEA;AAED,IAAM8B,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAChCf,EAAAA,SAAS,EAAE;AACVgB,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE,OAFP;AAGVC,IAAAA,YAAY,EAAE;AAHJ,GADqB;AAMhCd,EAAAA,MAAM,EAAE;AACPM,IAAAA,QAAQ,EAAE,EADH;AAEPD,IAAAA,SAAS,EAAE,QAFJ;AAGPU,IAAAA,MAAM,EAAE;AAHD,GANwB;AAWhCC,EAAAA,MAAM,EAAE;AACPD,IAAAA,MAAM,EAAE,EADD;AAEPF,IAAAA,eAAe,EAAE;AAFV;AAXwB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, ScrollView } from \"react-native\";\nimport { Button } from \"react-native-paper\";\nimport QuestionOne from \"./QuestionOne\";\nimport QuestionTwo from \"./QuestionTwo\";\nimport QuestionThree from \"./QuestionThree\";\nimport QuestionFour from \"./QuestionFour\";\nimport QuestionFive from \"./QuestionFive\";\n\nimport { calculateQ1 } from \"./QuestionOne\";\nimport { calculateQ2 } from \"./QuestionTwo\";\nimport { calculateQ3 } from \"./QuestionThree\";\nimport { calculateQ4 } from \"./QuestionFour\";\nimport { calculateQ5 } from \"./QuestionFive\";\n\nimport qs from \"qs\";\nimport { Linking } from \"react-native\";\nimport { Banner } from \"react-native-paper\";\n\nasync function sendEmail(to, subject, body, options = {}) {\n\tconst { cc, bcc } = options;\n\n\tlet url = `mailto:${to}`;\n\n\t// Create email link query\n\tconst query = qs.stringify({\n\t\tsubject: subject,\n\t\tbody: body,\n\t\tcc: cc,\n\t\tbcc: bcc,\n\t});\n\n\tif (query.length) {\n\t\turl += `?${query}`;\n\t}\n\tconsole.log(\"url\", url);\n\n\t// check if we can use this link\n\tconst canOpen = await Linking.canOpenURL(url);\n\n\tif (!canOpen) {\n\t\tthrow new Error(\"Provided URL can not be handled\");\n\t}\n\n\treturn Linking.openURL(url);\n}\n\nlet total = 0;\nexport default function VPHome(props) {\n\tconst [visible, setVisible] = React.useState(true);\n\tconsole.log(\"props\", props);\n\tlet email = props.route.params.email.text;\n\tconst [score, setScore] = React.useState(\"Tap above to calcluate!\");\n\n\t// const [q7, setQ7] = React.useState(0);\n\tfunction scoreMathz() {\n\t\ttotal = 0;\n\t\t// setQ7(calculateQ7());\n\t\ttotal =\n\t\t\tcalculateQ1() +\n\t\t\tcalculateQ2() +\n\t\t\tcalculateQ3() +\n\t\t\tcalculateQ4() +\n\t\t\tcalculateQ5();\n\t\tsetScore(total);\n\t}\n\tvar today = new Date();\n\tvar date =\n\t\ttoday.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\tvar time =\n\t\ttoday.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n\tvar dateTime = date + \" \" + time;\n\n\treturn (\n\t\t<ScrollView style={styles.container}>\n\t\t\t<Banner\n\t\t\t\tvisible={visible}\n\t\t\t\tactions={[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"Got it\",\n\t\t\t\t\t\tonPress: () => setVisible(false),\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t\ticon=\"check\"\n\t\t\t\tstyle={{ fontName: \"ArialMT\" }}\n\t\t\t>\n\t\t\t\tMake sure to choose an answer for each question.\n\t\t\t</Banner>\n\t\t\t<Text style={styles.header}>\n\t\t\t\tPlease choose the item that best describes your situation.\n\t\t\t</Text>\n\t\t\t<QuestionOne />\n\t\t\t<QuestionTwo />\n\t\t\t<QuestionThree />\n\t\t\t<QuestionFour />\n\t\t\t<QuestionFive />\n\n\t\t\t<Button\n\t\t\t\tmode=\"contained\"\n\t\t\t\ttitle=\"click here\"\n\t\t\t\tlabelStyle={{ color: \"white\" }}\n\t\t\t\t// color=\"white\"\n\t\t\t\tstyle={{ width: 200, marginLeft: \"auto\", marginRight: \"auto\" }}\n\t\t\t\tonPress={() => scoreMathz()}\n\t\t\t>\n\t\t\t\tCalculate Score\n\t\t\t</Button>\n\t\t\t<Button title=\"calculate score\" onPress={() => scoreMathz()} />\n\t\t\t<Text style={{ textAlign: \"center\", fontSize: 22, fontStyle: \"italic\" }}>\n\t\t\t\tScore: {score}\n\t\t\t\t{\"\\n\"}\n\t\t\t\t{\"\\n\"}\n\t\t\t</Text>\n\t\t\t<Button\n\t\t\t\tlabelStyle={{ color: \"white\" }}\n\t\t\t\tstyle={{\n\t\t\t\t\t// margin: 10,\n\t\t\t\t\twidth: 300,\n\t\t\t\t\tmarginBottom: 80,\n\t\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\t\tmarginRight: \"auto\",\n\t\t\t\t}}\n\t\t\t\tmode=\"contained\"\n\t\t\t\tcolor=\"gray\"\n\t\t\t\tonPress={() =>\n\t\t\t\t\tsendEmail(\n\t\t\t\t\t\temail,\n\t\t\t\t\t\t\"VP Score\",\n\t\t\t\t\t\t`Hello, ${\"\\n\"} My VP score on ${dateTime} was ${score}.${\"\\n\"} Thank you`\n\t\t\t\t\t).then(() => {\n\t\t\t\t\t\tconsole.log(\"Our email successful provided to device mail \");\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t>\n\t\t\t\tSend score to your provider\n\t\t\t</Button>\n\t\t</ScrollView>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"white\",\n\t\talignContent: \"center\",\n\t},\n\theader: {\n\t\tfontSize: 26,\n\t\ttextAlign: \"center\",\n\t\tmargin: 10,\n\t},\n\tbutton: {\n\t\tmargin: 20,\n\t\tbackgroundColor: \"orange\",\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}